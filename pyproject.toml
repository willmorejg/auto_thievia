[build-system]
requires = ["setuptools>=61.0", "wheel", "setuptools-scm>=8.0"]
build-backend = "setuptools.build_meta"

[project]
name = "auto_thievia"
dynamic = ["version"]
authors = [{ name = "James G Willmore", email = "willmorejg@gmail.com" }]
maintainers = [{ name = "James G Willmore", email = "willmorejg@gmail.com" }]
description = "A Python package using GIS to determine auto theft patterns."
readme = "README.md"
license = "Apache-2.0"
license-files = ["LICENSE"]
keywords = [
    "auto",
    "gis",
    "crime",
    "theft",
    "mapping",
    "analysis",
    "investigation",
    "police",
    "security",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Legal Industry",
    "Intended Audience :: End Users/Desktop",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: GIS",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Scientific/Engineering :: Visualization",
    "Topic :: Database",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Environment :: Web Environment",
    "Framework :: FastAPI",
]
requires-python = ">=3.12"
dependencies = [
    "geopandas>=0.14.0",
    "folium>=0.14.0",
    "matplotlib>=3.7.0",
    "shapely>=2.0.0",
    "contextily>=1.4.0",
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "duckdb>=0.9.0",
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
    "python-multipart>=0.0.6",
    "pydantic>=2.0.0",
    "requests>=2.28.0",
    "pillow>=9.0.0",
    "pyproj>=3.6.0",
    "geopy>=2.3.0",
    "scikit-learn>=1.3.0",
    "joblib>=1.3.0",
    "networkx>=3.0",
    "plotly>=5.0.0",
    "seaborn>=0.12.0",
]

[project.scripts]
auto-thievia-api = "auto_thievia.api:main"

[project.urls]
Homepage = "https://github.com/willmorejg/auto_thievia"
"Bug Tracker" = "https://github.com/willmorejg/auto_thievia/issues"
Documentation = "https://auto_thievia.readthedocs.io/"
"Source Code" = "https://github.com/willmorejg/auto_thievia"
Changelog = "https://github.com/willmorejg/auto_thievia/blob/main/CHANGELOG.md"

[project.optional-dependencies]
dev = [
    "setuptools",
    "pytest>=6.0",
    "pytest-cov",
    "pytest-mock",
    "black",
    "isort",
    "flake8",
    "mypy",
    "pre-commit",
    "autoflake",
    "build",
    "bumpver",
    "wheel",
    "pdoc",
]
docs = ["sphinx", "sphinx-rtd-theme", "pdoc"]
test = [
    "pytest>=6.0",
    "pytest-cov",
    "pytest-mock",
    "coverage",
    "requests>=2.28.0",
]
gis = ["rasterio>=1.3.0", "rtree>=1.0.0", "osmnx>=1.6.0", "mercantile>=1.2.0"]
ml = ["xgboost>=1.7.0", "lightgbm>=4.0.0", "catboost>=1.2.0", "scipy>=1.10.0"]
web = ["starlette>=0.27.0", "jinja2>=3.1.0"]
all = ["auto_thievia[dev,docs,test,gis,ml,web]"]

[tool.setuptools]
package-dir = { "" = "src" }
include-package-data = true
zip-safe = false

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.dynamic]
version = { attr = "auto_thievia.__version__" }

# Development tools configuration that work better in pyproject.toml
[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["auto_thievia"]
src_paths = ["src", "tests"]

[tool.autoflake]
remove-all-unused-imports = true
remove-unused-variables = true
remove-duplicate-keys = true
expand-star-imports = true
exclude = "__init__.py"

[tool.bumpver]
current_version = "0.1.0"
version_pattern = "MAJOR.MINOR.PATCH"
commit_message = "bump version {old_version} -> {new_version}"
commit = true
tag = true
push = false

[tool.bumpver.file_patterns]
"src/auto_thievia/__init__.py" = ["__version__ = '{version}'"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
pythonpath = ["src"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/test_*", "*/__pycache__/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]
show_missing = true

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
check_untyped_defs = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
